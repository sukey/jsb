[buildout]
develop = . src/demo
extends = etc/versions.cfg
parts =
    libevent
    memcached
    libmemcached
    pylibmc
    mongodb
    erlang
    rabbitmq
    ejabberd
    ejabberd-config
    demo
    typhoonae
    python
    tests
    pcre
    nginx
    nginxctl
    default-server-config
    supervisor
    supervisor-config
    sphinx

versions = versions
allow-picked-versions = false
unzip = true

[libevent]
recipe = zc.recipe.cmmi
url = http://www.monkey.org/~provos/libevent-1.4.12-stable.tar.gz

[memcached]
recipe = zc.recipe.cmmi
url = http://memcached.googlecode.com/files/memcached-1.4.2.tar.gz
extra_options = --with-libevent=${libevent:location} --bindir=${buildout:directory}/bin
environment =
    CFLAGS=-I${libevent:location}/include
    LDFLAGS=-L${libevent:location}/lib

[libmemcached]
recipe = zc.recipe.cmmi
url = http://download.tangent.org/libmemcached-0.34.tar.gz
extra_options = --with-memcached=${buildout:directory}/bin/memcached

[pylibmc]
recipe = zc.recipe.egg:custom
egg = pylibmc
include-dirs = ${libmemcached:location}/include
library-dirs = ${libmemcached:location}/lib
rpath = ${libmemcached:location}/lib

[mongodb]
recipe = rod.recipe.mongodb
darwin-32bit-url = http://downloads.mongodb.org/osx/mongodb-osx-i386-1.0.0.tgz
darwin-64bit-url = http://downloads.mongodb.org/osx/mongodb-osx-x86_64-1.0.0.tgz
linux2-32bit-url = http://downloads.mongodb.org/linux/mongodb-linux-i686-1.0.0.tgz
linux2-64bit-url = http://downloads.mongodb.org/linux/mongodb-linux-x86_64-1.0.0.tgz

[erlang]
recipe = zc.recipe.cmmi
url = http://www.erlang.org/download/otp_src_R13B01.tar.gz

[rabbitmq]
recipe = rod.recipe.rabbitmq
erlang-path = ${erlang:location}/bin
url = http://www.rabbitmq.com/releases/rabbitmq-server/v1.7.0/rabbitmq-server-1.7.0.tar.gz

[ejabberd]
recipe = rod.recipe.ejabberd
erlang-path = ${erlang:location}/bin
url = http://www.process-one.net/downloads/ejabberd/2.1.0-rc1/sources/ejabberd-2.1.0_rc1.tar.gz

[ejabberd-config]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/ejabberd.cfg.in
output = ${buildout:directory}/etc/ejabberd.cfg

[demo]
recipe = rod.recipe.appengine
eggs = demo
zip-packages = False
url = http://googleappengine.googlecode.com/files/google_appengine_1.2.7.zip
server-script = dev_appserver

[typhoonae]
recipe = zc.recipe.egg
eggs =
    typhoonae [amqp]
    typhoonae [mongo]
    typhoonae [memcached]
    typhoonae [xmpp]
extra-paths =
    ${buildout:directory}/parts/google_appengine
    ${buildout:directory}/parts/google_appengine/lib/antlr3
    ${buildout:directory}/parts/google_appengine/lib/django
    ${buildout:directory}/parts/google_appengine/lib/webob
    ${buildout:directory}/parts/google_appengine/lib/yaml/lib
entry-points =
    appserver=typhoonae.fcgiserver:main
    apptool=typhoonae.apptool:main
    intid=typhoonae.intid:main
    taskworker=typhoonae.taskqueue.worker:main
    deferred_taskworker=typhoonae.taskqueue.deferred_worker:main
    ejabberdauth=typhoonae.xmpp.ejabberdauth:main
    xmpp_http_dispatch=typhoonae.xmpp.xmpp_http_dispatch:main
    runtask=typhoonae.runtask:main
initialization = 
    import os
    os.environ['TMPDIR']=os.path.join('${buildout:directory}', 'var')

[python]
recipe = zc.recipe.egg
eggs =
    ${typhoonae:eggs}
extra-paths =
    ${typhoonae:extra-paths}
interpreter = python
scripts = python

[tests]
recipe = zc.recipe.egg
eggs =
    ${typhoonae:eggs}
    nose
extra-paths =
    ${typhoonae:extra-paths}
initialization =
    ${typhoonae:initialization}

[pcre]
recipe = zc.recipe.cmmi
url = ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.00.tar.gz

[nginx]
recipe = zc.recipe.cmmi
url = http://sysoev.ru/nginx/nginx-0.7.62.tar.gz
extra_options = --with-cc-opt=-I${pcre:location}/include --with-ld-opt=-L${pcre:location}/lib

[nginxctl]
recipe = gocept.nginx
nginx = nginx
configuration =
    daemon off;
    worker_processes 1;

    events {
        worker_connections  1024;
    }

    http {
        include            ${nginx:location}/conf/mime.types;
        default_type       application/octet-stream;
        sendfile           on;
        keepalive_timeout  65;

        include ${buildout:directory}/etc/server.conf;
    }

[default-server-config]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/server.conf.in
output = ${buildout:directory}/etc/server.conf

[supervisor]
recipe = zc.recipe.egg

[supervisor-config]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/supervisord.conf.in
output = ${buildout:directory}/etc/supervisord.conf

[sphinx]
recipe = zc.recipe.egg
eggs =
    ${typhoonae:eggs}
    Sphinx
extra-paths =
    ${typhoonae:extra-paths}
